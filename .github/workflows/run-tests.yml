name: ðŸ§ª Test

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - main
  schedule:
    - cron: "0 7 * * 1"

jobs:
  build-openblas:
    name: Build and cache OpenBLAS
    runs-on: ubuntu-latest
    env:
      OPENBLAS_VERSION: "0.3.23"
    outputs:
      cache-key: ${{ steps.cache-openblas-restore.outputs.cache-primary-key }}
    steps:
      - name: Restore cached OpenBLAS
        id: cache-openblas-restore
        uses: actions/cache/restore@v3
        with:
          path: openblas
          key: test-openblas-${{ env.OPENBLAS_VERSION }}
      - name: Build OpenBLAS
        run: |
          wget https://github.com/xianyi/OpenBLAS/releases/download/v0.3.23/OpenBLAS-$OPENBLAS_VERSION.tar.gz
          tar -xf OpenBLAS-$OPENBLAS_VERSION.tar.gz
          rm OpenBLAS-$OPENBLAS_VERSION.tar.gz
          mv OpenBLAS-$OPENBLAS_VERSION openblas
          cd openblas
          make -j4 PREFIX=/usr
        if: ${{ steps.cache-openblas-restore.outputs.cache-hit != 'true' }}
      - name: Cache OpenBLAS
        id: cache-openblas
        uses: actions/cache/save@v3
        with:
          path: openblas
          key: ${{ steps.cache-openblas-restore.outputs.cache-primary-key }}
        if: ${{ steps.cache-openblas-restore.outputs.cache-hit != 'true' }}

  run-tests:
    name: Run tests (Rust)
    runs-on: ubuntu-latest
    needs: build-openblas
    strategy:
      matrix:
        #rust-version: ["stable","beta","nightly"]
        #mpi: ["mpich", "openmpi"]
        rust-version: ["stable"]
        mpi: ["mpich"]
    steps:
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust-version }}
          components: rustfmt
      - name: Install LAPACK and Clang
        run: sudo apt-get install -y liblapack-dev libclang-dev

      - name: Restore cached OpenBLAS
        id: cache-openblas-restore
        uses: actions/cache/restore@v3
        with:
          path: openblas
          key: ${{ needs.build-openblas.outputs.cache-key }}

      - name: Install OpenBLAS
        run: |
          cd openblas
          sudo make install PREFIX=/usr

      - name: Set up MPI
        uses: mpi4py/setup-mpi@v1
        with:
          mpi: ${{ matrix.mpi }}
      - name: Install cargo-mpirun
        run: cargo install cargo-mpirun

      - uses: actions/checkout@v3

      - name: Style checks
        run: cargo fmt -- --check

      - name: Build rust library (debug)
        run: cargo build --features "strict,mpi,openblas-system"
      - name: Build rust library (release)
        run: cargo build --release --features "strict,mpi,openblas-system"
      - name: Run unit tests
        run: cargo test --lib --features "mpi,strict,openblas-system"
      - name: Run tests
        run: cargo test --examples --release --features "mpi,strict,openblas-system"
      - name: Run examples
        run: |
          python3 find_examples.py --features "strict,openblas-system"
          chmod +x examples.sh
          ./examples.sh

      - name: Build docs
        run: cargo doc --features "mpi,strict,openblas-system"
